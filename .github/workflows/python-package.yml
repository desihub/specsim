# # Workflow is based on the Astropy GitHub actions workflow, ci_workflows.yml

name: CI

on:
  push:
    branches:
      - '*'

  pull_request:
    branches:
      - '*'

jobs:
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:

          - os: ubuntu-latest
            python-version: '3.13'
            numpy-version: '<2.3'
            scipy-version: '<1.17'
            astropy-version: '<8.0'
            matplotlib-version: '<4.0'
            speclite-version: '==0.20'
            desiutil-version: '==3.5.2'
            desimodel-version: '0.19.3'

          - os: ubuntu-latest
            python-version: '3.12'
            numpy-version: '<2.2'
            scipy-version: '<1.16'
            astropy-version: '<7.0'
            matplotlib-version: '<3.10'
            speclite-version: '==0.20'
            desiutil-version: '==3.5.2'
            desimodel-version: '0.19.3'

          - os: ubuntu-latest
            python-version: '3.11'
            numpy-version: '<2.1'
            scipy-version: '<1.15'
            astropy-version: '<6.1'
            matplotlib-version: '<3.9'
            speclite-version: '==0.20'
            desiutil-version: '==3.5.2'
            desimodel-version: '0.19.3'

          - os: ubuntu-latest
            python-version: '3.10'
            numpy-version: '<2.0'
            scipy-version: '<1.12'
            astropy-version: '<6.1'
            matplotlib-version: '<3.9'
            speclite-version: '==0.20'
            desiutil-version: '==3.5.2'
            desimodel-version: '0.19.3'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools\<71
          python -m pip install pytest pytest-astropy pyyaml
          python -m pip install 'numpy${{ matrix.numpy-version }}'
          python -m pip install 'scipy${{ matrix.scipy-version }}'
          python -m pip install 'matplotlib${{ matrix.matplotlib-version }}'
          python -m pip install 'astropy${{ matrix.astropy-version }}'
          python -m pip install 'speclite${{ matrix.speclite-version }}'
          python -m pip install 'desiutil${{ matrix.desiutil-version }}'
          python -m pip install git+https://github.com/desihub/desimodel.git@${{ matrix.desimodel-version }}

      - name: Run the test
        run: pytest

  coverage:
    name: Test coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools\<70
          python -m pip install pytest pytest-astropy coveralls
          python -m pip install pyyaml numpy\<1.23 scipy\<1.9 astropy\<6.1 matplotlib\<3.9 speclite==0.20
          python -m pip install desiutil==3.5.2
          python -m pip install git+https://github.com/desihub/desimodel.git@0.19.3

      - name: Run the test with coverage
        run: pytest --cov

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: coveralls

  docs:
    name: Doc test
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest]
            python-version: ['3.10']

    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install Python dependencies
          run: |
            python -m pip install --upgrade pip wheel setuptools\<70 docutils Sphinx
            python -m pip install git+https://github.com/desihub/desiutil.git@3.4.2
            python -m pip install -e .[docs]

        - name: Test the documentation
          run: sphinx-build -W --keep-going -b html docs docs/_build/html

  style:
    name: Style test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-latest]
          python-version: ['3.10']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools\<70 flake8

      - name: Test the style; failures are not allowed
        # This is equivalent to an allowed falure.
        # continue-on-error: true
        run: flake8 specsim --count --max-line-length=100
